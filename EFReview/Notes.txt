Navigation Property
- a property that helps you navigate from one entity to another

Course can access Author property which is linked to the Author entity

EF supports all kinds of relationship
	1 to *
	* to *

**************************
Uncovering the EDMX
**************************

EDMX Designer is a visual representation of XML

When viewing XML
	EF Runtime content
		includes everything about model

		SSDL content (StorageModel)
			representation of our database
			Data about database, tables, columns

		CSDL content (ConceptualModel)
			representation of our entities
			Data about entity name, properties
			we can change our conceptualModel and mapping will update accordingly

		C-S mapping content (Mappings)
			representation of mapping between those two models storage - conceptual
			this is essentially the ORM that maps the DB modeling to OO (C#) modeling
			Table matching to Entity
				Property to Column mapping

	EF Designer content
		includes data about visual represetation of EDMX
		anything visual represent there

To see mapping in EDMX Diagram, right click Entity and select Table Mapping
	Conceptual mapping

To see storage model, right click on empty area and select Model Browser

EDMX is xml that knows everything about storage model, conceptual model, mapping between two
and visual details of EDMX file in Visual Studio

**************************
Connection Strings
**************************

Connections strings are located in app.config

web app will be web.config

this is database first workflow noise
	metadata 3 resources, .csdl, .ssdl, .msl
	this reference assembly info for Conceptual, Storage model and mapping

connection string is actual connection string to database

**************************
Dealing with Database Changes
**************************

As we make changes to model, we have to change database 1st
and then update model in code

Adding a new table

Add in database 1st
Then in EDMX diagram, right click in open area and select Update Model
from Database...

Updating a table
	renaming a column, removing a column
is tricky b/c although EF picks up the changes in term of creating
new columns for renamed items..

it will not automatically remove columns from the Entity models
this is probably by design so that existing code won't break
you just have to make sure to manually remove column you no longer
need from Entity model and update any code references to models

if you change a data type for column to something non compatible
like from int to varchar you have to manually update the table
mapping as EF would not know how to map varchar to byte/int in
this case

Deleting a table

when you delete something from database, EF will not automatically
delete entity or mapping.. you have to manually remove it






